/// @function		surface_read(str);
/// @param			{string}	str
/// @description	Returns a surface from a base64-encoded string previously generated by 
///					`surface_write`. Invalid strings will return `undefined`. Especially 
///					useful for save files and networking.
///
/// @example		ini_open(working_directory + "save.dat");
///					var my_surf = surface_read(ini_read_string("data", "screenshot", -1));
///					ini_close();
///		
///					if (surface_exists(my_surf)) {
///						draw_surface(my_surf, x, y);
///					}
///
/// @author			Lucas Chasteen <lucas.chasteen@xgasoft.com>
/// @copyright		XGASOFT 2020, All Rights Reserved

function surface_read(_str) {
	// Get surface size
	var buf_width = real(string_copy(_str, 1, string_pos("x", _str) - 1));
	_str = string_delete(_str, 1, string_pos("x", _str));
	var buf_height = real(string_copy(_str, 1, string_pos("x", _str) - 1));
	_str = string_delete(_str, 1, string_pos("x", _str));
	
	// Create buffer from string
	var buf_comp = buffer_base64_decode(_str);
	var buf_temp = buffer_decompress(buf_comp);
	
	// Return error if buffer creation failed
	if (!buffer_exists(buf_comp)) or (!buffer_exists(buf_temp)) {
		return undefined;
	}
	
	// Create surface from buffer
	var buf_surf = surface_create(buf_width, buf_height);
	buffer_set_surface(buf_temp, buf_surf, 0);
	
	// Cleanup temp data
	buffer_delete(buf_temp);
	buffer_delete(buf_comp);
	
	// Return surface
	return buf_surf;
}